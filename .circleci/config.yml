version: 2
jobs:
  build_and_publish_bot:
    working_directory: /go/src/github.com/artnetworldwide/automation-chatops-bot
    docker:
      - image: circleci/golang:1.11.1
    steps:
      - setup_remote_docker:
          docker_layer_caching: true
      - checkout
      - run:
          name: install dependencies
          command: |
            go get -u golang.org/x/oauth2/google
            go get -u google.golang.org/api/tagmanager/v2
            go get -u github.com/nlopes/slack
      - run:
          name: set up cicd tools
          command: |
            mkdir -p ~/bin/cicd-tools
            git clone git@github.com:artnetworldwide/cicd-tools.git ~/bin/cicd-tools
            cd ~/bin/cicd-tools # this doesn't affect other run steps
            git checkout v2.5.5
            CICD_TOOLS_VERSION=$(git describe --always)
            echo "cicd-tools have been set up in $(pwd)"
            echo "Version of cicd-tools: ${CICD_TOOLS_VERSION}"
            ls -alF ~/bin/cicd-tools
      - run:
          name: set up gtm service account credentials
          command: |
            echo $GTM_SERVICE_ACCOUNT_CREDENTIALS > "gtm_service_account_credentials.json"
      - run:
          name: build docker container
          command: |
            VERSION_NO=$(cat ./version.txt)
            DOCKER_IMAGE_FULL_NAME="$DOCKER_REGISTRY/$CIRCLE_PROJECT_REPONAME:$VERSION_NO"
            if [ ! -s "gtm_service_account_credentials.json" ]; then
              echo "gtm_service_account_credentials.json must exist and not be empty, breaking the build"
              exit 1
            fi
            docker build --build-arg SLACK_BOT_API_TOKEN=$SLACK_BOT_API_TOKEN \
                --build-arg GITHUB_ACCESS_TOKEN=$GITHUB_ACCESS_TOKEN \
                --build-arg GTM_ACCOUNT_ID=$GTM_ACCOUNT_ID \
                --build-arg GOOGLE_APPLICATION_CREDENTIALS="gtm_service_account_credentials.json" \
                -t $DOCKER_IMAGE_FULL_NAME .
      - run:
          name: publish docker image
          command: |
            DOCKER_REGISTRY=$DOCKER_REGISTRY \
            DOCKER_REGISTRY_USER=$DOCKER_USER_RW \
            DOCKER_REGISTRY_PASSWORD=$DOCKER_PASSWORD_RW \
            PROJECT_NAME=$CIRCLE_PROJECT_REPONAME \
            PROJECT_VERSION_NO=$(cat version.txt) \
            PROJECT_BRANCH=$CIRCLE_BRANCH \
            ~/bin/cicd-tools/publish_docker_image.sh

workflows:
  version: 2
  workflow:
    jobs:
      - build_and_publish_bot:
          context: org-global-v2
          filters:
            branches:
              only:
                # - master
                - /.*/ # for testing purposes run this on all branches
